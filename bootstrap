#!/usr/bin/env bash
set -euf -o pipefail

# Check which platform we are on
echo -n "Detected OS: "
if [ "$(uname)" == "Darwin" ]; then
  echo "MacOS"
  export MACOS=1
elif [ "$(uname)" == "Linux" ]; then
  echo "Linux"
  export LINUX=1
fi

# Check if the shell is interactive
if [ -t 0 ]; then
  echo "Running with Shell"
  export INTERACTIVE=1
fi

# Find the current directory location of the dotfiles repo so that we can link to it later
export CWD="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
export UTILS="${CWD}/utils"
MODULE_REGEX="^[\./]+$|\.git"

function sym_link {
  ln -sf $1 $2
}

function get_modules {
  find $1 ! -path ${CWD} -type d | egrep -v "${MODULE_REGEX}"
}

function link_files {
  FILES_TO_LINK=$(find $1 -regex '.*\.link$')
  for FILE in ${FILES_TO_LINK}
  do
    DEST="${HOME}/.$(basename ${FILE} .link)"
    echo "Linking ${FILE} to ${DEST}"
    sym_link ${FILE} ${DEST}
  done
}

function link_modules {
  for MODULE in $(get_modules $1)
  do
    link_files "${MODULE}"
  done
}

function bootstrap_module {
  BOOTSTRAPS=$(find $1 -regex '.*\.run$' | sort -V)
  for BOOTSTRAP in ${BOOTSTRAPS}
  do
    echo -n "Running bootstrap $BOOTSTRAP... "
    if $BOOTSTRAP; then
      echo "completed"
    else
      echo "failed"
    fi
  done
}

function bootstrap_modules {
  for MODULE in $(get_modules $1)
  do
    bootstrap_module "${MODULE}"
  done
}

link_modules "$CWD"
bootstrap_modules "$CWD"

# Add flag for dealing with git signatures
